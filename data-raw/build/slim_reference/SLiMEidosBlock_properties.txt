active <–> (integer$)
If this evaluates to logical F (i.e., is equal to 0), the script block is inactive and will not be called.
The value of active for all registered script blocks is reset to -1 at the beginning of each generation,
prior to script events being called, thus activating all blocks. Any integer value other than -1 may be
used instead of -1 to represent that a block is active; for example, active may be used as a counter to
make a block execute a fixed number of times in each generation. This value is not cached by SLiM; if
it is changed, the new value takes effect immediately. For example, a callback might be activated and
inactivated repeatedly during a single generation.
TOC I TOC II WF nonWF initialize() Genome Individual Mutation SLiMSim Subpopulation
Eidos events fitness() mateChoice() modifyChild() recombination() interaction() reproduction() 505
end => (integer$)
The last generation in which the script block is active.
id => (integer$)
The identifier for this script block; for script s3, for example, this is 3. A script block for which no id
was given will have an id of -1.
source => (string$)
The source code string of the script block.
start => (integer$)
The first generation in which the script block is active.
tag <–> (integer$)
A user-defined integer value. The value of tag is initially undefined, and it is an error to try to read
it; if you wish it to have a defined value, you must arrange that yourself by explicitly setting its value
prior to using it elsewhere in your code. The value of tag is not used by SLiM; it is free for you to use.
type => (string$)
The type of the script block; this will be "early" or "late" for the two types of Eidos events, or
"initialize", "fitness", "mateChoice", "modifyChild", or "recombination" for the
respective types of Eidos callbacks (see section 23.1 and chapter 24).