(integer$)initializeAncestralNucleotides(is sequence) (nuc)
(void)initializeGeneConversion(n$ nonCrossoverFraction, n$ meanLength, n$ simpleConversionFraction, [n$ bias])
(o<GElement>)initializeGenomicElement(io<GEType> genomicElementType, i start, i end)
(o<GEType>$)initializeGenomicElementType(is$ id, io<MutType> mutationTypes, n proportions, [Nf mutationMatrix])
(void)initializeHotspotMap(numeric multipliers, [Ni ends], [s$ sex]) (nuc)
(o<IntType>$)initializeInteractionType(is$ id, s$ spatiality, [l$ reciprocal], [n$ maxDistance], [s$ sexSegregation])
(void)initializeMutationRate(n rates, [Ni ends], [s$ sex])
(o<MutType>$)initializeMutationType(is$ id, n$ dominanceCoeff, s$ distributionType, ...)
(o<MutType>$)initializeMutationTypeNuc(is$ id, n$ dominanceCoeff, s$ distributType, ...) (nuc)
(void)initializeRecombinationRate(n rates, [Ni ends], [s$ sex])
(void)initializeSex(s$ chromosomeType, [n$ xDominanceCoeff])
(void)initializeSLiMModelType(s$ modelType)
(void)initializeSLiMOptions([l$ keepPedigrees], [s$ dimensionality], [s$ periodicity], [i$ mutationRuns], [l$ preventIncidentalSelfing], [l$ nucleotideBased])
(void)initializeTreeSeq([l$ recordMutations], [Nif$ simplificationRatio], [Ni$ simplificationInterval], [l$ checkCoalescence], [l$ runCrosschecks])