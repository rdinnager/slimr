% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/slim_lang.R
\name{distance}
\alias{distance}
\alias{InteractionType$distance}
\alias{.IT$distance}
\title{SLiM method distance}
\usage{
distance(receiver, exerters)
}
\arguments{
\item{receiver}{An object of type Individual object. Must be of length 1 (a
singleton). See details for description.}

\item{exerters}{An object of type null or Individual object. The default value
is \code{NULL}. See details for description.}
}
\value{
An object of type float.
}
\description{
Documentation for SLiM function \code{distance}, which is a method of the SLiM
class \code{\link{InteractionType}}.
Note that the R function is a stub, it does not do anything in R (except bring
up this documentation). It will only do
anything useful when used inside a \code{\link{slim_block}} function further
nested in a \code{\link{slim_script}}
function call, where it will be translated into valid SLiM code as part of a
full SLiM script.
}
\details{
Documentation for this function can be found in the official
\href{http://benhaller.com/slim/SLiM_Manual.pdf#page=659}{SLiM manual: page
659}.

Returns a vector containing distances between receiver and the
individuals in exerters. If exerters is NULL (the default), then a vector of
the distances from receiver to all individuals in its subpopulation (including
itself) is returned; this case may be handled differently internally, for
greater speed, so supplying NULL is preferable to supplying the vector of all
individuals in the subpopulation explicitly. Otherwise, all individuals in
exerters must belong to a single subpopulation (but not necessarily the same
subpopulation as receiver). The evaluate() method must have been previously
called for the receiver and exerter subpopulations, and positions saved at
evaluation time will be used. If the InteractionType is non-spatial, this
method may not be called. Importantly, distances are calculated according to the
spatiality of the InteractionType (as declared in initializeInteractionType()),
not the dimensionality of the model as a whole (as declared in
initializeSLiMOptions()). The distances returned are therefore the distances
that would be used to calculate interaction strengths. However, distance() will
return finite distances for all pairs of individuals, even if the individuals
are non-interacting; the distance() between an individual and itself will thus
be 0. See interactionDistance() for an alternative distance definition.
}
\section{Copyright}{

This is documentation for a function in the SLiM software, and has been
reproduced from the official manual,
which can be found here: \url{http://benhaller.com/slim/SLiM_Manual.pdf}. This
documentation is
Copyright Â© 2016-2020 Philipp Messer. All rights reserved. More information
about SLiM can be found
on the official website: \url{https://messerlab.org/slim/}
}

\seealso{
Other InteractionType: 
\code{\link{InteractionType}},
\code{\link{clippedIntegral}()},
\code{\link{distanceFromPoint}()},
\code{\link{drawByStrength}()},
\code{\link{evaluate}()},
\code{\link{interactingNeighborCount}()},
\code{\link{interactionDistance}()},
\code{\link{localPopulationDensity}()},
\code{\link{nearestInteractingNeighbors}()},
\code{\link{nearestNeighborsOfPoint}()},
\code{\link{nearestNeighbors}()},
\code{\link{neighborCountOfPoint}()},
\code{\link{neighborCount}()},
\code{\link{setInteractionFunction}()},
\code{\link{strength}()},
\code{\link{totalOfNeighborStrengths}()},
\code{\link{unevaluate}()}
}
\author{
Benjamin C Haller (\email{bhaller@benhaller.com}) and Philipp W Messer
(\email{messer@cornell.edu})
}
\concept{InteractionType}
