% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/slim_lang.R
\name{distanceFromPoint}
\alias{distanceFromPoint}
\alias{InteractionType$distanceFromPoint}
\alias{.IT$distanceFromPoint}
\title{SLiM method distanceFromPoint}
\usage{
distanceFromPoint(point, exerters)
}
\arguments{
\item{point}{An object of type float. See details for description.}

\item{exerters}{An object of type Individual object. See details for
description.}
}
\value{
An object of type float.
}
\description{
Documentation for SLiM function \code{distanceFromPoint}, which is a method of
the SLiM class \code{\link{InteractionType}}.
Note that the R function is a stub, it does not do anything in R (except bring
up this documentation). It will only do
anything useful when used inside a \code{\link{slim_block}} function further
nested in a \code{\link{slim_script}}
function call, where it will be translated into valid SLiM code as part of a
full SLiM script.
}
\details{
Documentation for this function can be found in the official
\href{http://benhaller.com/slim/SLiM_Manual.pdf#page=692}{SLiM manual: page
692}.

Returns a vector containing distances between the point given by
the spatial coordinates in point, which may be thought of as the "receiver",
and individuals in exerters. The point vector is interpreted as providing
coordinates precisely as specified by the spatiality of the interaction type; if
the interaction type's spatiality is "xz", for example, then point[0] is assumed
to be an x value, and point[1] is assumed to be a z value. Be careful; this
means that in general it is not safe to pass an individual's spatialPosition
property for point, for example (although it is safe if the spatiality of the
interaction matches the dimensionality of the simulation). A coordinate for a
periodic spatial dimension must be within the spatial bounds for that dimension,
since coordinates outside of periodic bounds are meaningless (pointPeriodic()
may be used to ensure this); coordinates for non-periodic spatial dimensions
are not restricted. All individuals in exerters must belong to a single
subpopulation; the evaluate() method must have been previously called for that
subpopulation, and positions saved at evaluation time will be used. If the
InteractionType is non-spatial, this method may not be called. The vector point
must be exactly as long as the spatiality of the InteractionType. Importantly,
distances are calculated according to the spatiality of the InteractionType (as
declared in initializeInteractionType()) not the dimensionality of the model as
a whole (as declared in initializeSLiMOptions()). The distances are therefore
interaction distances: the distances that are used to calculate interaction
strengths. However, the maximum interaction distance and interaction constraints
are not used. This method replaces the distanceToPoint() method that existed
prior to SLiM 4.
}
\section{Copyright}{

This is documentation for a function in the SLiM software, and has been
reproduced from the official manual,
which can be found here: \url{http://benhaller.com/slim/SLiM_Manual.pdf}. This
documentation is
Copyright Â© 2016-2020 Philipp Messer. All rights reserved. More information
about SLiM can be found
on the official website: \url{https://messerlab.org/slim/}
}

\seealso{
Other InteractionType: 
\code{\link{IT}},
\code{\link{clippedIntegral}()},
\code{\link{distance}()},
\code{\link{drawByStrength}()},
\code{\link{evaluate}()},
\code{\link{interactingNeighborCount}()},
\code{\link{interactionDistance}()},
\code{\link{localPopulationDensity}()},
\code{\link{nearestInteractingNeighbors}()},
\code{\link{nearestNeighbors}()},
\code{\link{nearestNeighborsOfPoint}()},
\code{\link{neighborCount}()},
\code{\link{neighborCountOfPoint}()},
\code{\link{setConstraints}()},
\code{\link{setInteractionFunction}()},
\code{\link{strength}()},
\code{\link{testConstraints}()},
\code{\link{totalOfNeighborStrengths}()},
\code{\link{unevaluate}()}
}
\author{
Benjamin C Haller (\email{bhaller@benhaller.com}) and Philipp W Messer
(\email{messer@cornell.edu})
}
\concept{InteractionType}
