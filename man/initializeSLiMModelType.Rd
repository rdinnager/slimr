% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/slim_lang.R
\name{initializeSLiMModelType}
\alias{initializeSLiMModelType}
\alias{Initialize$initializeSLiMModelType}
\alias{.Init$initializeSLiMModelType}
\title{SLiM method initializeSLiMModelType}
\usage{
initializeSLiMModelType(modelType)
}
\arguments{
\item{modelType}{An object of type string. Must be of length 1 (a singleton).
See details for description.}
}
\value{
An object of type void.
}
\description{
Documentation for SLiM function \code{initializeSLiMModelType}, which is a
method of the SLiM class \code{Initialize}.
Note that the R function is a stub, it does not do anything in R (except bring
up this documentation). It will only do
anything useful when used inside a \code{\link{slim_block}} function further
nested in a \code{\link{slim_script}}
function call, where it will be translated into valid SLiM code as part of a
full SLiM script.
}
\details{
Configure the type of SLiM model used for the simulation. At present,
one of two model types may be selected. If modelType is "WF", SLiM will use a
Wright–Fisher (WF) model; this is the model type that has always been supported
by SLiM, and is the model type used if initializeSLiMModelType() is not called.
If modelType is "nonWF", SLiM will use a non-Wright–Fisher (nonWF) model
instead; this is a new model type supported by SLiM 3.0 and above (see section
1.6). If initializeSLiMModelType() is called at all then it must be called
before any other initialization function, so that SLiM knows from the outset
which features are enabled and which are not.
}
\section{Copyright}{

This is documentation for a function in the SLiM software, and has been
reproduced from the official manual,
which can be found here: \url{http://benhaller.com/slim/SLiM_Manual.pdf}. This
documentation is
Copyright © 2016–2020 Philipp Messer. All rights reserved. More information
about SLiM can be found
on the official website: \url{https://messerlab.org/slim/}
}

\author{
Benjamin C Haller (\email{bhaller@benhaller.com}) and Philipp W Messer
(\email{messer@cornell.edu})
}
