% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/slim_lang.R
\name{interactingNeighborCount}
\alias{interactingNeighborCount}
\alias{InteractionType$interactingNeighborCount}
\alias{.IT$interactingNeighborCount}
\title{SLiM method interactingNeighborCount}
\usage{
interactingNeighborCount(receivers, exerterSubpop)
}
\arguments{
\item{receivers}{An object of type Individual object. See details for
description.}

\item{exerterSubpop}{An object of type null or Subpopulation object. Must be
of length 1 (a singleton). The default value is \code{NULL}. See details for
description.}
}
\value{
An object of type integer.
}
\description{
Documentation for SLiM function \code{interactingNeighborCount}, which is a
method of the SLiM class \code{\link{InteractionType}}.
Note that the R function is a stub, it does not do anything in R (except bring
up this documentation). It will only do
anything useful when used inside a \code{\link{slim_block}} function further
nested in a \code{\link{slim_script}}
function call, where it will be translated into valid SLiM code as part of a
full SLiM script.
}
\details{
Documentation for this function can be found in the official
\href{http://benhaller.com/slim/SLiM_Manual.pdf#page=661}{SLiM manual: page
661}.

Returns the number of interacting individuals for each individual in
receivers, within the maximum interaction distance according to the distance
metric of the InteractionType, from among the exerters in exerterSubpop (or, if
that is NULL, then from among all individuals in the receiver's subpopulation).
More specifically, this method counts the number of individuals which can exert
an interaction upon each receiver. All of the receivers must belong to a single
subpopulation, and all of the exerters must belong to a single subpopulation,
but those two subpopulations do not need to be the same. The evaluate() method
must have been previously called for the receiver and exerter subpopulations,
and positions saved at evaluation time will be used. This method is similar to
nearestInteractingNeighbors() (when passed a large count so as to guarantee that
all interacting individuals are returned), but this method returns only a count
of the interacting individuals, not a vector containing the individuals. This
method may also be called in a vectorized fashion, with a non-singleton vector
of individuals, unlike nearestInteractingNeighbors(). Note that this method uses
interaction eligibility as a criterion; it will not count neighbors that cannot
exert an interaction upon a receiver (due to sex-segregation, e.g.). (It also
does not count a receiver as a neighbor of itself.) If a count of all neighbors
is desired, rather than just interacting neighbors, use neighborCount(). If the
InteractionType is non-spatial, this method may not be called.
}
\section{Copyright}{

This is documentation for a function in the SLiM software, and has been
reproduced from the official manual,
which can be found here: \url{http://benhaller.com/slim/SLiM_Manual.pdf}. This
documentation is
Copyright Â© 2016-2020 Philipp Messer. All rights reserved. More information
about SLiM can be found
on the official website: \url{https://messerlab.org/slim/}
}

\seealso{
Other InteractionType: 
\code{\link{InteractionType}},
\code{\link{clippedIntegral}()},
\code{\link{distanceFromPoint}()},
\code{\link{distance}()},
\code{\link{drawByStrength}()},
\code{\link{evaluate}()},
\code{\link{interactionDistance}()},
\code{\link{localPopulationDensity}()},
\code{\link{nearestInteractingNeighbors}()},
\code{\link{nearestNeighborsOfPoint}()},
\code{\link{nearestNeighbors}()},
\code{\link{neighborCountOfPoint}()},
\code{\link{neighborCount}()},
\code{\link{setInteractionFunction}()},
\code{\link{strength}()},
\code{\link{totalOfNeighborStrengths}()},
\code{\link{unevaluate}()}
}
\author{
Benjamin C Haller (\email{bhaller@benhaller.com}) and Philipp W Messer
(\email{messer@cornell.edu})
}
\concept{InteractionType}
