% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/slim_lang.R
\name{killIndividuals}
\alias{killIndividuals}
\alias{Species$killIndividuals}
\alias{.Sp$killIndividuals}
\title{SLiM method killIndividuals}
\usage{
killIndividuals(individuals)
}
\arguments{
\item{individuals}{An object of type Individual object. See details for
description.}
}
\value{
An object of type void.
}
\description{
Documentation for SLiM function \code{killIndividuals}, which is a method of the
SLiM class \code{\link{Species}}.
Note that the R function is a stub, it does not do anything in R (except bring
up this documentation). It will only do
anything useful when used inside a \code{\link{slim_block}} function further
nested in a \code{\link{slim_script}}
function call, where it will be translated into valid SLiM code as part of a
full SLiM script.
}
\details{
Documentation for this function can be found in the official
\href{http://benhaller.com/slim/SLiM_Manual.pdf#page=679}{SLiM manual: page
679}.

Immediately kills the individuals in individuals. This removes them
from their subpopulation and gives them an index value of -1. The Individual
objects are not freed immediately, since references to them could still exist
in local Eidos variables; instead, the individuals are kept in a temporary
"graveyard" until they can be freed safely. It therefore continues to be safe to
use them and their genomes, except that accessing their subpopulation property
will raise an error since they no longer have a subpopulation. Note that the
indices and order of individuals and genomes in all source subpopulations will
change unpredictably as a side effect of this method. All evaluated interactions
are invalidated as a side effect of calling this method. Note that this method
is only for use in nonWF models, in which mortality is managed manually by
the model script. In WF models, mortality is managed automatically by the SLiM
core when the new offspring generation becomes the parental generation and the
previous parental generation dies; mortality does not otherwise occur in WF
models. In nonWF models, mortality normally occurs during the survival stage
of the tick cycle (see section 23.4), based upon the fitness values calculated
by SLiM, and survival() callbacks can influence the outcome of that survival
stage. Calls to killIndividuals(), on the other hand, can be made at any time
during first(), early(), or late() events, and the result cannot be modified by
survival() callbacks; the given individuals are simply immediately killed. This
method therefore provides an alternative, and relatively rarely used, mortality
mechanism that is disconnected from fitness.
}
\section{Copyright}{

This is documentation for a function in the SLiM software, and has been
reproduced from the official manual,
which can be found here: \url{http://benhaller.com/slim/SLiM_Manual.pdf}. This
documentation is
Copyright Â© 2016-2020 Philipp Messer. All rights reserved. More information
about SLiM can be found
on the official website: \url{https://messerlab.org/slim/}
}

\seealso{
Other Species: 
\code{\link{Sp}},
\code{\link{addSubpop}()},
\code{\link{countOfMutationsOfType}()},
\code{\link{individualsWithPedigreeIDs}()},
\code{\link{mutationCounts}()},
\code{\link{mutationFrequencies}()},
\code{\link{mutationsOfType}()},
\code{\link{outputFixedMutations}()},
\code{\link{outputFull}()},
\code{\link{outputMutations}()},
\code{\link{readFromPopulationFile}()},
\code{\link{recalculateFitness}()},
\code{\link{registerFitnessEffectCallback}()},
\code{\link{registerMateChoiceCallback}()},
\code{\link{registerModifyChildCallback}()},
\code{\link{registerMutationCallback}()},
\code{\link{registerMutationEffectCallback}()},
\code{\link{registerRecombinationCallback}()}
}
\author{
Benjamin C Haller (\email{bhaller@benhaller.com}) and Philipp W Messer
(\email{messer@cornell.edu})
}
\concept{Species}
