% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/slim_lang.R
\name{mm16To256}
\alias{mm16To256}
\alias{SLiMBuiltin$mm16To256}
\alias{.SB$mm16To256}
\title{SLiM method mm16To256}
\usage{
mm16To256(mutationMatrix16)
}
\arguments{
\item{mutationMatrix16}{An object of type float. See details for description.}
}
\value{
An object of type string or float or float or float or integer or float
or integer.
}
\description{
Documentation for SLiM function \code{mm16To256}, which is a method of the SLiM
class \code{SLiMBuiltin}.
Note that the R function is a stub, it does not do anything in R (except bring
up this documentation). It will only do
anything useful when used inside a \code{\link{slim_block}} function further
nested in a \code{\link{slim_script}}
function call, where it will be translated into valid SLiM code as part of a
full SLiM script.
}
\details{
Returns a 64×4 mutation matrix that is functionally identical to
the supplied 4×4 mutation matrix in mutationMatrix16. The mutation rate for
each of the 64 trinucleotides will depend only upon the central nucleotide
of the trinucleotide, and will be taken from the corresponding entry for
the same nucleotide in mutationMatrix16. This function can be used to easily
construct a simple trinucleotide-based mutation matrix which can then be
modified so that specific trinucleotides sustain a mutation rate that does
not depend only upon their central nucleotide. See the documentation for
initializeGenomicElementType() in section 23.1 for further discussion of how
these 64×4 mutation matrices are interpreted and used.
}
\section{Copyright}{

This is documentation for a function in the SLiM software, and has been
reproduced from the official manual,
which can be found here: \url{http://benhaller.com/slim/SLiM_Manual.pdf}. This
documentation is
Copyright © 2016–2020 Philipp Messer. All rights reserved. More information
about SLiM can be found
on the official website: \url{https://messerlab.org/slim/}
}

\author{
Benjamin C Haller (\email{bhaller@benhaller.com}) and Philipp W Messer
(\email{messer@cornell.edu})
}
