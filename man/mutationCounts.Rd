% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/slim_lang.R
\name{mutationCounts}
\alias{mutationCounts}
\alias{SLiMSim$mutationCounts}
\alias{.SS$mutationCounts}
\title{SLiM method mutationCounts}
\usage{
mutationCounts(subpops, mutations)
}
\arguments{
\item{subpops}{An object of type null or Subpopulation object. See details for
description.}

\item{mutations}{An object of type null or Mutation object. The default value is
\code{NULL}. See details for description.}
}
\value{
An object of type integer.
}
\description{
Documentation for SLiM function \code{mutationCounts}, which is a method of the
SLiM class \code{SLiMSim}.
Note that the R function is a stub, it does not do anything in R (except bring
up this documentation). It will only do
anything useful when used inside a \code{\link{slim_block}} function further
nested in a \code{\link{slim_script}}
function call, where it will be translated into valid SLiM code as part of a
full SLiM script.
}
\details{
Return an integer vector with the frequency counts of all of the
Mutation objects passed in mutations, within the Subpopulation objects in
subpops. The subpops argument is required, but you may pass NULL to get
population-wide frequency counts. If the optional mutations argument is NULL
(the default), frequency counts will be returned for all of the active Mutation
objects in the simulation – the same Mutation objects, and in the same order,
as would be returned by the mutations property of sim, in other words. See the
-mutationFrequencies() method to obtain float frequencies instead of integer
counts.
}
\section{Copyright}{

This is documentation for a function in the SLiM software, and has been
reproduced from the official manual,
which can be found here: \url{http://benhaller.com/slim/SLiM_Manual.pdf}. This
documentation is
Copyright © 2016–2020 Philipp Messer. All rights reserved. More information
about SLiM can be found
on the official website: \url{https://messerlab.org/slim/}
}

\author{
Benjamin C Haller (\email{bhaller@benhaller.com}) and Philipp W Messer
(\email{messer@cornell.edu})
}
