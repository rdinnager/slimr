% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/slim_lang.R
\name{outputFull}
\alias{outputFull}
\alias{SLiMSim$outputFull}
\alias{.SS$outputFull}
\title{SLiM method outputFull}
\usage{
outputFull(
  filePath,
  binary,
  append,
  spatialPositions,
  ages,
  ancestralNucleotides
)
}
\arguments{
\item{filePath}{An object of type null or string. Must be of length 1 (a
singleton). The default value is \code{NULL}. See details for description.}

\item{binary}{An object of type logical. Must be of length 1 (a singleton). The
default value is \code{F}. See details for description.}

\item{append}{An object of type logical. Must be of length 1 (a singleton). The
default value is \code{F}. See details for description.}

\item{spatialPositions}{An object of type logical. Must be of length 1 (a
singleton). The default value is \code{T}. See details for description.}

\item{ages}{An object of type logical. Must be of length 1 (a singleton). The
default value is \code{T}. See details for description.}

\item{ancestralNucleotides}{An object of type logical. Must be of length 1 (a
singleton). The default value is \code{T}. See details for description.}
}
\value{
An object of type void.
}
\description{
Documentation for SLiM function \code{outputFull}, which is a method of the SLiM
class \code{SLiMSim}.
Note that the R function is a stub, it does not do anything in R (except bring
up this documentation). It will only do
anything useful when used inside a \code{\link{slim_block}} function further
nested in a \code{\link{slim_script}}
function call, where it will be translated into valid SLiM code as part of a
full SLiM script.
}
\details{
Output the state of the entire population (see section 25.1.1 for
output format details). If the optional parameter filePath is NULL (the
default), output will be sent to Eidos’s output stream (see section 4.2.1).
Otherwise, output will be sent to the filesystem path specified by filePath,
overwriting that file if append if F, or appending to the end of it if append
is T. When writing to a file, a logical flag, binary, may be supplied as well.
If binary is T, the population state will be written as a binary file instead
of a text file (binary data cannot be written to the standard output stream).
The binary file is usually smaller, and in any case will be read much faster
than the corresponding text file would be read. Binary files are not guaranteed
to be portable between platforms; in other words, a binary file written on
one machine may not be readable on a different machine (but in practice it
usually will be, unless the platforms being used are fairly unusual). If
binary is F (the default), a text file will be written. Beginning with SLiM
2.3, the spatialPositions parameter may be used to control the output of the
spatial positions of individuals in simulations for which continuous space
has been enabled using the dimensionality option of initializeSLiMOptions().
If spatialPositions is F, the output will not contain spatial positions,
and will be identical to the output generated by SLiM 2.1 and later. If
spatialPositions is T, spatial position information will be output if it is
available (see section 25.1.1 for format details). If the simulation does not
have continuous space enabled, the spatialPositions parameter will be ignored.
Positional information may be output for all output destinations – the Eidos
output stream, a text file, or a binary file. Beginning with SLiM 3.0, the
ages parameter may be used to control the output of the ages of individuals in
nonWF simulations. If ages is F, the output will not contain ages, preserving
backward compatibility with the output format of SLiM 2.1 and later. If ages
is T, ages will be output for nonWF models (see section 25.1.1 for format
details). In WF simulations, the ages parameter will be ignored. Beginning with
SLiM 3.3, the ancestralNucleotides parameter may be used to control the output
of the ancestral nucleotide sequence in nucleotide-based models (see section
25.1.1 for format details). If ancestralNucleotides is F, the output will not
contain ancestral nucleotide information, and so the ancestral sequence will
not be restored correctly if the saved file is loaded with readPopulationFile().
This option is provided because the ancestral sequence may be quite large,
for models with a long chromosome (e.g., 1 GB if the chromosome is 109 bases
long, when saved in text format, or 0.25 GB when saved in binary format).
If the model is not nucleotide-based (as enabled with the nucleotideBased
parameter to initializeSLiMOptions()), the ancestralNucleotides parameter
will be ignored. Note that in nucleotide-based models the output format will
always include the nucleotides associated with any nucleotide-based mutations;
the ancestralNucleotides flag governs only the ancestral sequence. Output is
generally done in a late() event, so that the output reflects the state of the
simulation at the end of a generation.
}
\section{Copyright}{

This is documentation for a function in the SLiM software, and has been
reproduced from the official manual,
which can be found here: \url{http://benhaller.com/slim/SLiM_Manual.pdf}. This
documentation is
Copyright © 2016–2020 Philipp Messer. All rights reserved. More information
about SLiM can be found
on the official website: \url{https://messerlab.org/slim/}
}

\author{
Benjamin C Haller (\email{bhaller@benhaller.com}) and Philipp W Messer
(\email{messer@cornell.edu})
}
