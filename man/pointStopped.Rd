% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/slim_lang.R
\name{pointStopped}
\alias{pointStopped}
\alias{Subpopulation$pointStopped}
\alias{.P$pointStopped}
\title{SLiM method pointStopped}
\usage{
pointStopped(point)
}
\arguments{
\item{point}{An object of type float. See details for description.}
}
\value{
An object of type float.
}
\description{
Documentation for SLiM function \code{pointStopped}, which is a method of the
SLiM class \code{Subpopulation}.
Note that the R function is a stub, it does not do anything in R (except bring
up this documentation). It will only do
anything useful when used inside a \code{\link{slim_block}} function further
nested in a \code{\link{slim_script}}
function call, where it will be translated into valid SLiM code as part of a
full SLiM script.
}
\details{
Returns a revised version of point that has been brought inside the
spatial boundaries of the subpopulation by clamping. In brief, if a coordinate
of point lies beyond a spatial boundary, that coordinate is set to exactly the
position of the boundary, so that it lies on the edge of the spatial boundary.
This method is useful for implementing stopping boundary conditions. This may
only be called in simulations for which continuous space has been enabled with
initializeSLiMOptions(). The length of point must be an exact multiple of the
dimensionality of the simulation; in other words, point may contain values
comprising more than one point. In this case, each point will be processed as
described above and a new vector containing all of the processed points will be
returned.
}
\section{Copyright}{

This is documentation for a function in the SLiM software, and has been
reproduced from the official manual,
which can be found here: \url{http://benhaller.com/slim/SLiM_Manual.pdf}. This
documentation is
Copyright © 2016–2020 Philipp Messer. All rights reserved. More information
about SLiM can be found
on the official website: \url{https://messerlab.org/slim/}
}

\author{
Benjamin C Haller (\email{bhaller@benhaller.com}) and Philipp W Messer
(\email{messer@cornell.edu})
}
