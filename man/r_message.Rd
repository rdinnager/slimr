% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/slimr_output.R
\name{r_message}
\alias{r_message}
\alias{slimr_message}
\title{Send SLiM output to the R console as a message while a simulation is running}
\usage{
r_message(slimr_expr, do_every = 1, time_counter = community.tick)

slimr_message(slimr_expr, do_every = 1, time_counter = community.tick)
}
\arguments{
\item{slimr_expr}{A SLiM expression to generate output. This can either be
a SLiM expression designed to create output, such as \code{outputFull()},
or an object created in the SLiM code, in which case \code{r_output}
will automatically concatenate it to a string and output it}

\item{do_every}{How often should the output be produced? Expressed
as an integer saying how many generations to run before producing output.
e.g. \code{do_every = 10} means to output every 10 generations of the
simulation.}

\item{time_counter}{Expression used to extract the simulation time from SLiM. By default this
uses the global timing mechanism in SLiM version >4.0: `community.tick`. For versions <4.0,
use `sim.generation` instead (this parameter is for backwards compatibility with old SLiM versions)}
}
\value{
A placemarker expression that is used by `slimr`internally.
}
\description{
Send SLiM output to the R console as a message while a simulation is running
}
\examples{
slim_script(
  slim_block(initialize(),
             {
               initializeMutationRate(1e-7);
               initializeMutationType("m1", 0.5, "f", 0.0);
               initializeGenomicElementType("g1", m1, 1.0);
               initializeGenomicElement(g1, 0, 99999);
               initializeRecombinationRate(1e-8);
             }),
  slim_block(1,
             {
               sim.addSubpop("p1", 100);
             }),
  slim_block(1, 10000, {
    r_message(c("This is generation", community.tick), do_every = 100);
  }),
  slim_block(10000,
             {
               sim.simulationFinished();
             })
) -> test_sim
test_sim
}
