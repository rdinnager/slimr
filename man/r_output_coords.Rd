% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/slimr_output.R
\name{r_output_coords}
\alias{r_output_coords}
\alias{slimr_output_coords}
\title{Utility function to tell SLiM to output coordinates from spatial simulations}
\usage{
r_output_coords(dimensionality = c("x", "xy", "xyz"), ...)

slimr_output_coords(dimensionality = c("x", "xy", "xyz"), ...)
}
\arguments{
\item{dimensionality}{What dimensionality should be output? Can be
"x", "xy", or "xyz".}

\item{...}{Other arguments to be passed to \code{\link{r_output}}}
}
\value{
None
}
\description{
Utility function to tell SLiM to output coordinates from spatial simulations
}
\details{
Outputs x, y, and z coordinates as separate entries in \code{slimr_results},
with names "x", "y", and "z".
}
\examples{
if(slim_is_avail()) {
  test_sim <- slim_script(

    slim_block(initialize(),  {
        initializeSLiMOptions(dimensionality = "xy")
        initializeMutationRate(1e-07)
        initializeMutationType("m1", 0.5, "f", asFloat(0))
        initializeGenomicElementType("g1", m1, asFloat(1))
        initializeGenomicElement(g1, 0, 99999)
        initializeRecombinationRate(1e-08)
    }),

    slim_block(1, late(),  {
        sim.addSubpop("p1", 500)
        p1.individuals.x = runif(p1.individualCount)
        p1.individuals.y = runif(p1.individualCount)
    }),

    slim_block(1, 2000, late(), {
      r_output_coords(dimensionality = "xy", do_every = 10);
    }),

    slim_block(modifyChild(),  {
      child.x = parent1.x + rnorm(1, 0, 0.02)
      while((child.x < asFloat(0)) | (child.x > asFloat(1))) {
        child.x = parent1.x + rnorm(1, 0, 0.02)
      }
      child.y = parent1.y + rnorm(1, 0, 0.02)
      while((child.y < asFloat(0)) | (child.y > asFloat(1))) {
        child.y = parent1.y + rnorm(1, 0, 0.02)
      }
      return(T)
    }),

    slim_block(2000, late(),  {
        sim.outputFixedMutations()
    })
  ) |>
    slim_run()
  slim_results_to_data(test_sim)
}
}
