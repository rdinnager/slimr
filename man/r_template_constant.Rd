% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/slimr_template.R
\name{r_template_constant}
\alias{r_template_constant}
\alias{slimr_template_constant}
\title{Like slimr_template but automatically inserts code to setup variable as
a defineConstant() call in the SLiM initialization block.}
\usage{
r_template_constant(var_name, default = NULL, unquote_strings = FALSE)

slimr_template_constant(var_name, default = NULL, unquote_strings = FALSE)
}
\arguments{
\item{var_name}{Name to use as a placemarker for the variable. This name will be used for replacing values later.}

\item{default}{A default value to be inserted during script rendering if a value is not otherwise provided.}

\item{unquote_strings}{If the value being inserted is of class character, should it be 'unquoted', that is,
should double quotes around the value be removed? This is useful when you want to refer to a SLiM object, e.g.
to insert \code{p1.setMigrationRate(...)} instead of \code{"p1".setMigrationRate(...)}, the latter of which is not
valid SLiM code.}
}
\value{
placemarker if used outside `slim_block`
}
\description{
Like slimr_template but automatically inserts code to setup variable as
a defineConstant() call in the SLiM initialization block.
}
\details{
Note that this function is only designed to be used inside a \code{\link{slim_block}} function call. If run in any other
situation, it won't really do anything, just returning a reference to the placemarker that would have been inserted if run in
its correct context.
}
