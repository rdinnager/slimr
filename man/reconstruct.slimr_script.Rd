% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/slimr_script.R
\name{reconstruct.slimr_script}
\alias{reconstruct.slimr_script}
\title{Reconstruct slimrlang code to make this slimr_script}
\usage{
\method{reconstruct}{slimr_script}(x, ...)
}
\arguments{
\item{x}{slimr_script object to reconstruct}

\item{...}{Further arguments, passed to or from other methods.}
}
\value{
A character vector of length one containing the reconstructed code.
}
\description{
This reconstructs a \code{slimrlang} input sequence to regenerate the given \code{slimr_script}
object. This is useful if you want to edit the SLiM script to add additional functionality,
for example, where you want to incorporate the results of \code{slimrlang}'s internal edits, e.g.
such as removing \code{\link{\%.\%}} special operators, etc. It is also useful when the
\code{slimr_script} object has been created from converting a text-based SLiM script, such as when
using \code{\link[slimr]{as_slimr_script}} from the \code{slimr} package on a character variable.
}
\examples{
slim_script(
    slim_block(initialize(),
         {
              .Init$initializeMutationRate(1e-7);
              .Init$initializeMutationType("m1", 0.5, "f", 0.0);
              .Init$initializeGenomicElementType("g1", m1, 1.0);
              .Init$initializeGenomicElement(g1, 0, 99999);
              .Init$initializeRecombinationRate(1e-8);
         }),
           slim_block(1,
           {
              sim\%.\%.SS$addSubpop("p1", 500);
           }),
   slim_block(10000,
         {
              sim\%.\%.SS$simulationFinished();
         })
) -> script
reconstruct(script)
}
