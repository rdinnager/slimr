% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/slimr_scripting.R
\name{slim_function}
\alias{slim_function}
\title{Specify an Eidos function to be included in the SLiM script}
\usage{
slim_function(..., name, return_type = "f$", body)
}
\arguments{
\item{...}{List of arguments specified using Eidos's argument syntax (which includes type specification; see details)}

\item{name}{Name of function being created.}

\item{return_type}{Type of the functions return, using Eidos' type syntax (see details)}

\item{body}{SLiM / Eidos code to be executed in the body of the function.
Can also be an R function, in which case the body of the R function is
used.}
}
\value{
A \code{slimr_block} object (only useful with the context of a \code{\link{slim_script}}) call.
}
\description{
Specify an Eidos function to be included in the SLiM script
}
\examples{
test_sim <- slim_script(
  slim_function("o<Subpopulation>$ subpop1", "o<Subpopulation>$ subpop2",
               name = "calculateFST",
               return_type = "f$", body = function(subpop1, subpop2) {
                 p1_p = sim.mutationFrequencies(subpop1);
                 p2_p = sim.mutationFrequencies(subpop2);
                 mean_p = (p1_p + p2_p) / 2.0;
                 H_t = 2.0 * mean_p * (1.0 - mean_p);
                 H_s = p1_p * (1.0 - p1_p) + p2_p * (1.0 - p2_p);
                 fst = 1.0 - H_s/H_t;
                 fst = fst[isFinite(fst)]; ## exclude muts where mean_p is 0.0 or 1.0
                 return(mean(fst));
               }),
  slim_block_init_minimal(mutation_rate = 1e-6),
  slim_block_add_subpops(2, 100),
  slim_block(1, 20, late(), {
    r_output(calculateFST(p1, p2), "out", do_every = 10)
  })
)
test_sim
}
