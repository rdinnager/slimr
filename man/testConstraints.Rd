% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/slim_lang.R
\name{testConstraints}
\alias{testConstraints}
\alias{InteractionType$testConstraints}
\alias{.IT$testConstraints}
\title{SLiM method testConstraints}
\usage{
testConstraints(individuals, constraints, returnIndividuals)
}
\arguments{
\item{individuals}{An object of type Individual object. See details for
description.}

\item{constraints}{An object of type string. Must be of length 1 (a singleton).
See details for description.}

\item{returnIndividuals}{An object of type logical. Must be of length 1 (a
singleton). The default value is \code{F}. See details for description.}
}
\value{
An object of type logical or Individual object.
}
\description{
Documentation for SLiM function \code{testConstraints}, which is a method of the
SLiM class \code{\link{InteractionType}}.
Note that the R function is a stub, it does not do anything in R (except bring
up this documentation). It will only do
anything useful when used inside a \code{\link{slim_block}} function further
nested in a \code{\link{slim_script}}
function call, where it will be translated into valid SLiM code as part of a
full SLiM script.
}
\details{
Documentation for this function can be found in the official
\href{http://benhaller.com/slim/SLiM_Manual.pdf#page=698}{SLiM manual: page
698}.

Tests the individuals in the parameter individuals against the
interaction constraints specified by constraints. The value of constraints may
be "receiver" to use the receiver constraints, or "exerter" to use the exerter
constraints. If returnIndividuals is F (the default), a logical vector will be
returned, with T values indicating that the corresponding individual satisfied
the constraints, F values indicating that it did not. If returnIndividuals is
T, an object vector of class Individual will be returned containing only those
elements of individuals that satisfied the constraints (in the same order as
individuals). Note that unlike most queries, the InteractionType does not need
to have been evaluated before calling this method, and the individuals passed in
need not belong to a single population or even a single species. This method can
be useful for narrowing a vector of individuals down to just those that satisfy
constraints. Outside the context of InteractionType, similar functionality is
provided by the Subpopulation method subsetIndividuals(). Note that the use
of testConstraints() is somewhat rare; usually, queries are evaluated across
a vector of individuals, each of which might or might not satisfy the defined
constraints. Individuals that do not satisfy constraints do not participate in
interactions, so their interaction strength with other individuals will simply
be zero. See the setConstraints() method to set up constraints, as well as
the sexSegregation parameter to initializeInteractionType(). Note that if the
constraints tested involve tag values (including tagL0 / tagL1 / tagL2 / tagL3 /
tagL4), the corresponding property or properties of the tested individuals
must be defined (i.e., must have been set to a value), or an error will result
because the constraints cannot be applied.
}
\section{Copyright}{

This is documentation for a function in the SLiM software, and has been
reproduced from the official manual,
which can be found here: \url{http://benhaller.com/slim/SLiM_Manual.pdf}. This
documentation is
Copyright Â© 2016-2020 Philipp Messer. All rights reserved. More information
about SLiM can be found
on the official website: \url{https://messerlab.org/slim/}
}

\seealso{
Other InteractionType: 
\code{\link{IT}},
\code{\link{clippedIntegral}()},
\code{\link{distanceFromPoint}()},
\code{\link{distance}()},
\code{\link{drawByStrength}()},
\code{\link{evaluate}()},
\code{\link{interactingNeighborCount}()},
\code{\link{interactionDistance}()},
\code{\link{localPopulationDensity}()},
\code{\link{nearestInteractingNeighbors}()},
\code{\link{nearestNeighborsOfPoint}()},
\code{\link{nearestNeighbors}()},
\code{\link{neighborCountOfPoint}()},
\code{\link{neighborCount}()},
\code{\link{setConstraints}()},
\code{\link{setInteractionFunction}()},
\code{\link{strength}()},
\code{\link{totalOfNeighborStrengths}()},
\code{\link{unevaluate}()}
}
\author{
Benjamin C Haller (\email{bhaller@benhaller.com}) and Philipp W Messer
(\email{messer@cornell.edu})
}
\concept{InteractionType}
