% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/slim_lang.R
\name{treeSeqRememberIndividuals}
\alias{treeSeqRememberIndividuals}
\alias{SLiMSim$treeSeqRememberIndividuals}
\alias{.SS$treeSeqRememberIndividuals}
\title{SLiM method treeSeqRememberIndividuals}
\usage{
treeSeqRememberIndividuals(individuals)
}
\arguments{
\item{individuals}{An object of type Individual object. See details for
description.}
}
\value{
An object of type void.
}
\description{
Documentation for SLiM function \code{treeSeqRememberIndividuals}, which is a
method of the SLiM class \code{SLiMSim}.
Note that the R function is a stub, it does not do anything in R (except bring
up this documentation). It will only do
anything useful when used inside a \code{\link{slim_block}} function further
nested in a \code{\link{slim_script}}
function call, where it will be translated into valid SLiM code as part of a
full SLiM script.
}
\details{
Permanently adds the individuals specified by individuals to the sample
retained across tree sequence table simplification. This method may only be
called if tree sequence recording has been turned on with initializeTreeSeq().
All currently living individuals are always retained across simplification;
this method does not need to be called, and indeed should not be called, for
that purpose. Instead, treeSeqRememberIndividuals() is for permanently adding
particular individuals to the retained sample. Typically this would be used,
for example, to retain particular individuals that you wanted to be able to
trace ancestry back to in later analysis. However, this is not the typical usage
pattern for tree sequence recording; most models will not need to call this
method. The metadata (age, location, etc) that are stored in the resulting tree
sequence are those values present at either (a) the final generation, if the
individual is alive at the end of the simulation, or (b) the last time that the
individual was remembered, if not. Calling treeSeqRememberIndividuals() on an
individual that is already remembered will cause the archived information about
the remembered individual to be updated to reflect the individual’s current
state. A case where this is particularly important is for the spatial location
of individuals in continuous-space models. SLiM automatically remembers the
individuals that comprise the first generation of any new subpopulation created
with addSubpop(), for easy recapitation and other analysis (see sections 17.2
and 17.10). However, since these first-generation individuals are remembered
at the moment they are created, their spatial locations have not yet been
set up, and will contain garbage – and those garbage values will be archived
in their remembered state. If you need correct spatial locations of first-
generation individuals for your post-simulation analysis, you should call
treeSeqRememberIndividuals() explicitly on the first generation, after setting
spatial locations, to update the archived information with the correct spatial
positions.
}
\section{Copyright}{

This is documentation for a function in the SLiM software, and has been
reproduced from the official manual,
which can be found here: \url{http://benhaller.com/slim/SLiM_Manual.pdf}. This
documentation is
Copyright © 2016–2020 Philipp Messer. All rights reserved. More information
about SLiM can be found
on the official website: \url{https://messerlab.org/slim/}
}

\author{
Benjamin C Haller (\email{bhaller@benhaller.com}) and Philipp W Messer
(\email{messer@cornell.edu})
}
